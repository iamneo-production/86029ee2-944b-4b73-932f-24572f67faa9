{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sachi\\\\Desktop\\\\project\\\\workspace\\\\reactapp\\\\src\\\\components\\\\FeedBack.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Container, Card, Form, Button } from 'react-bootstrap';\nimport * as yup from 'yup';\nimport { Formik } from 'formik';\nimport { recordFeedback } from '../services/UserServices';\nimport { toast } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\nimport FormControl from \"../components/Form Components/FormControl\";\nimport { getCurrentUserDetails } from '../auth';\nimport Base from './Base';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FeedBack = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    id,\n    name,\n    email,\n    role\n  } = getCurrentUserDetails();\n  return /*#__PURE__*/_jsxDEV(Base, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"my-3\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: \"FeedBack\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: {\n              comments: '',\n              user: {\n                \"id\": `${id}`,\n                \"role\": `${role}`,\n                \"email\": `${email}`,\n                \"name\": `${name}`\n              }\n            },\n            validationSchema: yup.object({\n              comments: yup.string().required(\"Please enter your feedback\")\n            }),\n            onSubmit: (values, _ref) => {\n              let {\n                setSubmitting,\n                resetForm\n              } = _ref;\n              recordFeedback(values).then(response => {\n                toast.success(\"Yor feedback has been submitted\", {\n                  autoClose: 5000,\n                  pauseOnHover: false,\n                  hideProgressBar: true\n                });\n                navigate(\"/dashboard\");\n              }).catch(error => {\n                toast.error(error.response.data.message);\n              });\n              setTimeout(() => {\n                resetForm();\n                setSubmitting(false);\n              }, 1000);\n            },\n            children: _ref2 => {\n              var _errors$response, _errors$response$data;\n              let {\n                handleSubmit,\n                handleBlur,\n                handleChange,\n                handleReset,\n                errors,\n                touched,\n                values,\n                isSubmitting\n              } = _ref2;\n              return /*#__PURE__*/_jsxDEV(Form, {\n                noValidate: true,\n                onSubmit: handleSubmit,\n                onReset: handleReset,\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  control: \"textarea\",\n                  type: \"text\",\n                  required: true,\n                  label: \"\",\n                  name: \"comments\",\n                  isValid: !!touched.comments && !errors.comments,\n                  isInvalid: !!touched.comments && !!errors.comments || (errors !== null && errors !== void 0 && (_errors$response = errors.response) !== null && _errors$response !== void 0 && (_errors$response$data = _errors$response.data) !== null && _errors$response$data !== void 0 && _errors$response$data.comments ? true : false),\n                  onChange: handleChange,\n                  onBlur: handleBlur,\n                  value: values.comments\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Container, {\n                  className: \"text-center\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-primary\",\n                    type: \"submit\",\n                    children: \"Submit Feedback\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 25\n                  }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-danger\",\n                    type: \"reset\",\n                    className: \"mx-2\",\n                    children: \"Reset\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 21\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(FeedBack, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = FeedBack;\nexport default FeedBack;\nvar _c;\n$RefreshReg$(_c, \"FeedBack\");","map":{"version":3,"names":["React","Container","Card","Form","Button","yup","Formik","recordFeedback","toast","useNavigate","FormControl","getCurrentUserDetails","Base","FeedBack","navigate","id","name","email","role","comments","user","object","string","required","values","setSubmitting","resetForm","then","response","success","autoClose","pauseOnHover","hideProgressBar","catch","error","data","message","setTimeout","handleSubmit","handleBlur","handleChange","handleReset","errors","touched","isSubmitting"],"sources":["C:/Users/sachi/Desktop/project/workspace/reactapp/src/components/FeedBack.js"],"sourcesContent":["import React from 'react'\r\nimport {Container, Card, Form, Button} from 'react-bootstrap'\r\nimport * as yup from 'yup'\r\nimport { Formik } from 'formik'\r\nimport { recordFeedback } from '../services/UserServices'\r\nimport {toast} from 'react-toastify'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport FormControl from \"../components/Form Components/FormControl\";\r\nimport { getCurrentUserDetails } from '../auth'\r\nimport Base from './Base'\r\n\r\nconst FeedBack = () => {\r\n    const navigate = useNavigate()\r\n    const {id, name, email ,role} = getCurrentUserDetails()\r\n  return (\r\n    <Base>\r\n    <Container className=\"my-3\">\r\n        <Card>\r\n            <Card.Header>FeedBack</Card.Header>\r\n            <Card.Body>\r\n                {/*Create a form to sign up*/}\r\n                <Formik\r\n                        initialValues={{\r\n                            comments:'',\r\n                            user:{\r\n                                \"id\":`${id}`,\r\n                                \"role\":`${role}`,\r\n                                \"email\":`${email}`,\r\n                                \"name\":`${name}`\r\n                            }\r\n                            \r\n                        }}\r\n                        validationSchema={yup.object({\r\n                            comments:yup.string().required(\"Please enter your feedback\")\r\n                            \r\n                        })}\r\n                        onSubmit={(values, {setSubmitting, resetForm}) => {                          \r\n                                recordFeedback(values).then((response)=>{\r\n                                toast.success(\"Yor feedback has been submitted\",{autoClose:5000, pauseOnHover:false, hideProgressBar:true} )\r\n                                navigate(\"/dashboard\")\r\n                            }).catch((error)=>{\r\n                                toast.error(error.response.data.message)\r\n                            })\r\n                            setTimeout(()=>{\r\n                                resetForm();\r\n                                setSubmitting(false);\r\n                            }, 1000)\r\n                        }}\r\n                >\r\n                { ({handleSubmit,  handleBlur, handleChange,handleReset,errors, touched, values, isSubmitting}) => (\r\n                    <Form noValidate onSubmit={handleSubmit} onReset={handleReset}>   \r\n                    <FormControl \r\n                                control=\"textarea\"\r\n                                type=\"text\"\r\n                                required\r\n                                label=\"\"\r\n                                name=\"comments\"\r\n                                isValid={!!touched.comments  && !errors.comments}\r\n                                isInvalid={(!!touched.comments && !!errors.comments) || (errors?.response?.data?.comments ? true:false)}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                value={values.comments}\r\n                            /> \r\n                    <Container className=\"text-center\">\r\n                        <Button variant = \"outline-primary\" type=\"submit\">Submit Feedback</Button>\r\n                            {' '}\r\n                        <Button variant = \"outline-danger\" type=\"reset\" className=\"mx-2\">Reset</Button>\r\n                    </Container>\r\n                    </Form>\r\n                )}\r\n                </Formik>\r\n            </Card.Body>\r\n        </Card>\r\n    </Container>\r\n</Base>\r\n  )\r\n}\r\n\r\nexport default FeedBack"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}